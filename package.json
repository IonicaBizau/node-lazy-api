{
  "name": "lazy-api",
  "version": "1.3.10",
  "description": "A minimalist module for loading API resources when they are used.",
  "main": "lib/index.js",
  "scripts": {
    "test": "node test"
  },
  "author": "Ionică Bizău <bizauionica@gmail.com> (https://ionicabizau.net)",
  "license": "MIT",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:IonicaBizau/node-lazy-api.git"
  },
  "keywords": [
    "minimalist",
    "node",
    "lazy",
    "API"
  ],
  "bugs": {
    "url": "https://github.com/IonicaBizau/node-lazy-api/issues"
  },
  "homepage": "https://github.com/IonicaBizau/node-lazy-api",
  "blah": {
    "description": [
      {
        "h2": "Philosophy"
      },
      {
        "p": [
          "Having a big service API wrapper written in NodeJS, most of people create a `for` loop and load all API files before doing anything. The files are loaded in RAM. So, It's not so RAM friendly to load them this way.",
          "With the `lazy-api` module this issue is fixed. Lazy API loads the file when the API method is called. If an application only uses one file, only that file will be loaded in RAM. The other will not be loaded."
        ]
      }
    ]
  },
  "files": [
    "bin/",
    "app/",
    "lib/",
    "dist/",
    "src/",
    "scripts/",
    "resources/",
    "menu/",
    "cli.js",
    "index.js",
    "bloggify.js",
    "bloggify.json",
    "bloggify/"
  ]
}